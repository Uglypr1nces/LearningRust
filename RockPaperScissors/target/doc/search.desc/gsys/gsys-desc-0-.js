searchState.loadedDescShard("gsys", 0, "Declares gear protocol syscalls for WASM.\nRepresents block count type.\nRepresents block number type.\nRepresents type defining concatenated block number with …\nRepresents block number type.\nRepresents byte type, which is a start of a buffer.\nCurrent version of execution settings.\nRepresents error code type.\nRepresents type defining concatenated error code with gas. …\nRepresents type defining concatenated length with handle. …\nRepresents type defining concatenated hash with error …\nRepresents type defining concatenated reply code with …\nRepresents type defining concatenated signal code with …\nRepresents type defining concatenated two hashes with …\nRepresents gas type.\nType representing converter between gas and value.\nRepresents handle type.\nRepresents hash type.\nRepresents type defining concatenated hash with value. 48 …\nRepresents length type.\nRepresents offset type.\nBasic struct for working with integer percentages allowing …\nRepresents reply code type.\nRepresents signal code type.\nRepresents byte type, which is a start of a sized buffer.\nRepresents type defining concatenated two hashes. 64 bytes.\nRepresents type defining concatenated two hashes with …\nRepresents value type.\nCurrent value of existential deposit.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates GasMultiplier from gas per value multiplier.\nCreates GasMultiplier from value per gas multiplier.\nCurrent gas multiplier.\nConverts given gas amount into its value equivalent.\nInfallible <code>gr_block_height</code> get syscall.\nInfallible <code>gr_block_timestamp</code> get syscall.\nFallible <code>gr_create_program</code> send syscall.\nFallible <code>gr_create_program_wgas</code> send syscall.\nInfallible <code>gr_debug</code> info syscall.\nInfallible <code>gr_env_vars</code> get syscall. It leaves backend with …\nInfallible <code>gr_exit</code> control syscall.\nInfallible <code>gr_gas_available</code> get syscall.\nInfallible <code>gr_leave</code> control syscall.\nInfallible <code>gr_message_id</code> get syscall.\nInfallible <code>gr_oom_panic</code> control syscall.\nInfallible <code>gr_panic</code> control syscall.\nInfallible <code>gr_program_id</code> get syscall.\nInfallible <code>gr_random</code> calculate syscall.\nFallible <code>gr_read</code> get syscall.\nFallible <code>gr_reply</code> send syscall.\nFallible <code>gr_reply_code</code> get syscall.\nFallible <code>gr_reply_commit</code> send syscall.\nFallible <code>gr_reply_commit_wgas</code> send syscall.\nFallible <code>gr_reply_deposit</code> control syscall.\nFallible <code>gr_reply_input</code> send syscall.\nFallible <code>gr_reply_input_wgas</code> send syscall.\nFallible <code>gr_reply_push</code> send syscall.\nFallible <code>gr_reply_push_input</code> send syscall.\nFallible <code>gr_reply_to</code> get syscall.\nFallible <code>gr_reply_wgas</code> send syscall.\nFallible <code>gr_reservation_reply</code> send syscall.\nFallible <code>gr_reservation_reply_commit</code> send syscall.\nFallible <code>gr_reservation_send</code> send syscall.\nFallible <code>gr_reservation_send_commit</code> send syscall.\nFallible <code>gr_reserve_gas</code> control syscall.\nFallible <code>gr_send</code> send syscall.\nFallible <code>gr_send_commit</code> send syscall.\nFallible <code>gr_send_commit_wgas</code> send syscall.\nFallible <code>gr_send_init</code> send syscall.\nFallible <code>gr_send_input</code> send syscall.\nFallible <code>gr_send_input_wgas</code> send syscall.\nFallible <code>gr_send_push</code> send syscall.\nFallible <code>gr_send_push_input</code> send syscall.\nFallible <code>gr_send_wgas</code> send syscall.\nFallible <code>gr_signal_code</code> get syscall.\nFallible <code>gr_signal_from</code> get syscall.\nInfallible <code>gr_size</code> get syscall.\nInfallible <code>gr_source</code> get syscall.\nFallible <code>gr_system_reserve_gas</code> control syscall.\nFallible <code>gr_unreserve_gas</code> control syscall.\nInfallible <code>gr_value</code> get syscall.\nInfallible <code>gr_value_available</code> get syscall.\nInfallible <code>gr_wait</code> control syscall.\nInfallible <code>gr_wait_for</code> control syscall.\nInfallible <code>gr_wait_up_to</code> control syscall.\nFallible <code>gr_wake</code> control syscall.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCurrent value of mailbox threshold.\nCreates GasMultiplier with gas == value.\nCurrent performance multiplier.\nConverts given value amount into its gas equivalent, …")